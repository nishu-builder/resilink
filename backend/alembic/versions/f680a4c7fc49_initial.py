"""initial

Revision ID: f680a4c7fc49
Revises: 
Create Date: 2025-06-02 04:38:06.782977

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'f680a4c7fc49'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_datasets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shp_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bbox', sa.JSON(), nullable=True),
    sa.Column('feature_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_building_datasets_name'), 'building_datasets', ['name'], unique=False)
    op.create_table('fragility_curves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('json_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fragility_curves_name'), 'fragility_curves', ['name'], unique=False)
    op.create_table('hazards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('wse_raster_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hazards_name'), 'hazards', ['name'], unique=False)
    op.create_table('interventions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interventions_name'), 'interventions', ['name'], unique=False)
    op.create_table('mapping_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('json_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mapping_sets_name'), 'mapping_sets', ['name'], unique=False)
    op.create_table('run_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_run_groups_name'), 'run_groups', ['name'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hazard_id', sa.Integer(), nullable=False),
    sa.Column('mapping_set_id', sa.Integer(), nullable=False),
    sa.Column('building_dataset_id', sa.Integer(), nullable=False),
    sa.Column('run_group_id', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('result_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['building_dataset_id'], ['building_datasets.id'], ),
    sa.ForeignKeyConstraint(['hazard_id'], ['hazards.id'], ),
    sa.ForeignKeyConstraint(['mapping_set_id'], ['mapping_sets.id'], ),
    sa.ForeignKeyConstraint(['run_group_id'], ['run_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_runs_name'), 'runs', ['name'], unique=False)
    op.create_table('run_interventions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('building_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('intervention_id', sa.Integer(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('run_interventions')
    op.drop_index(op.f('ix_runs_name'), table_name='runs')
    op.drop_table('runs')
    op.drop_index(op.f('ix_run_groups_name'), table_name='run_groups')
    op.drop_table('run_groups')
    op.drop_index(op.f('ix_mapping_sets_name'), table_name='mapping_sets')
    op.drop_table('mapping_sets')
    op.drop_index(op.f('ix_interventions_name'), table_name='interventions')
    op.drop_table('interventions')
    op.drop_index(op.f('ix_hazards_name'), table_name='hazards')
    op.drop_table('hazards')
    op.drop_index(op.f('ix_fragility_curves_name'), table_name='fragility_curves')
    op.drop_table('fragility_curves')
    op.drop_index(op.f('ix_building_datasets_name'), table_name='building_datasets')
    op.drop_table('building_datasets')
    # ### end Alembic commands ### 