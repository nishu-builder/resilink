version: "3"

dotenv: [".env.example", ".env"]

tasks:
  up:
    desc: "Run backend + frontend with live reload via docker compose"
    cmds:
      - docker compose up -d

  build:
    desc: "Build backend image"
    cmds:
      - docker compose build

  stop:
    desc: "Stop containers"
    cmds:
      - docker compose down

  lint:
    desc: "Format backend code with black and ruff"
    cmds:
      - |
        docker run --rm -v $(pwd)/hazard/backend:/app -w /app python:3.11-slim bash -c "pip install black ruff && black . && ruff --fix ."

  typecheck:
    desc: "Run pyright type checker on backend code"
    cmds:
      - |
        docker run --rm -v $(pwd)/hazard/backend:/app -w /app python:3.11-slim bash -c "pip install pyright && pyright /app"

  psql:
    desc: "Open psql shell"
    cmds:
      - docker compose exec -e PGPASSWORD=$POSTGRES_PASSWORD postgres psql -U $POSTGRES_USER -d $POSTGRES_DB

  shell:
    desc: Open an IPython shell in the backend container
    cmds:
      - 'docker compose exec backend bash -c "cd /app && source .venv/bin/activate && python3 -m shell"'

  add_req:
    desc: Adds python requirement with uv
    cmds:
      - uv add --directory=backend --project=hazard-backend {{.CLI_ARGS}}

  enter:
    desc: Open a bash shell in the backend container
    cmds:
      - 'docker compose exec backend bash -c "cd /app && bash"'

  alembic:
    desc: Run alembic commands inside the container and sync the versions directory back to the host
    cmds:
      - docker compose exec backend bash -c "cd /app && uv run alembic {{.CLI_ARGS}}"
      # Sync the entire versions directory back to the host
      - docker compose cp backend:/app/alembic/versions ./backend/alembic/

  migrate:upgrade:
    desc: Upgrade database to the latest migration
    cmds:
      - task alembic -- upgrade head

  migrate:create:
    desc: Create a new migration file based on model changes
    cmds:
      - task: alembic
        vars:
          CLI_ARGS: revision --autogenerate -m "'{{.CLI_ARGS}}'"
    silent: true

  migrate:downgrade:
    desc: Downgrade the last migration
    cmds:
      - task alembic -- downgrade -1
