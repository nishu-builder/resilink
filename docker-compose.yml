services:
  postgres:
    image: postgis/postgis:15-3.4-alpine
    env_file:
      - .env.example
      - .env
    environment:
      - TZ=UTC
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hazarduser -d hazarddb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 ${UVICORN_RELOAD:+--reload} ${UVICORN_RELOAD:+--reload-dir /app}
    ports:
      - "8000:8000"
    volumes:
      - ./hazard/data:/data
      - ./backend:/app
      - backend_venv:/app/.venv
    env_file:
      - .env.example
      - .env
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env.example
      - .env

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  backend_venv:
